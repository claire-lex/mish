#!/bin/bash
# Mish RC file
# Lex @ https://github.com/claire-lex/mish - 2022-2023
#
# Mish: Shell environment for penetration tests.
#
# Source this file in your terminal's RC file: . mishrc
# Then, enable / disable and operate with: mish [command] (-h for help)
# Help: mish help

################################################################################
# CONFIG                                                                       #
################################################################################

# Usage
MISH_ALIAS="mish"
COMMAND_LIST="help start status stop"
NETCOMMAND_LIST="ping host"
HELP="Usage: $MISH_ALIAS [$COMMAND_LIST $NETCOMMAND_LIST]"

# Variables for enabled nvironments (will be updated with config)
MISH_CURRENT_PATH=""
MISH_CURRENT_HISTORY=""

# Base files
MISH_DIR="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd)"
MISH_RC_FILE="mishrc"
MISH_RC_PATH="$MISH_DIR/$MISH_RC_FILE"
MISH_NET_FILE="mishnet"
MISH_NET_PATH="$MISH_DIR/$MISH_NET_FILE"

# Configuration file
MISH_CONFIG_FILE=".mishconfig"
MISH_CONFIG_PATH=$HOME/$MISH_CONFIG_FILE

# Log configuration
MISH_PATH="$HOME/mish"
MISH_LOGPATH_NAME="log"
MISH_CMDPATH_NAME="traces"
MISH_VULPATH_NAME="vulns"

# Constants
MISH_ENV_TITLE="name"
MISH_PATH_TITLE="path"
MISH_STATUS_TITLE="status"

# Read data from configuration file if it exists
if [[ -f $MISH_CONFIG_PATH ]]; then
    while IFS= read -r line; do
	if [[ $line == "$MISH_ENV_TITLE="* ]]; then
            MISH_ENV="${line#*=}"
	elif [[ $line == "$MISH_PATH_TITLE="* ]]; then
            MISH_PATH="${line#*=}"
	elif [[ $line == "$MISH_STATUS_TITLE="* ]]; then
            MISH_STATUS="${line#*=}"
	fi
    done < $MISH_CONFIG_PATH
else
    # Default values
    MISH_ENV=""
    MISH_STATUS="off"
fi

###############################################################################
# SET UP ENVIRONMENT                                                          #
###############################################################################

# Add completion to the base command $MISH_ALIAS
complete -W "$COMMAND_LIST $NETCOMMAND_LIST" $MISH_ALIAS

# Set up an alias to refer to this file with alias $MISH_ALIAS
alias $MISH_ALIAS=$MISH_RC_PATH

################################################################################
# FUNCTIONS                                                                    #
################################################################################

function ECHO {
    echo "[MISH] $*"
}

function help {
    echo "
${HELP}

 commands:
help	Display this help
start	Enable mish environment
status	Get information about mish's current status
stop	Disable mish environment

 netcommands (call to mishnet):
$($MISH_NET_PATH help)
"
}

function update_config {
    MISH_CURRENT_LOGPATH="$MISH_PATH/$MISH_ENV/$MISH_LOGPATH_NAME"
    MISH_CURRENT_CMDPATH="$MISH_PATH/$MISH_ENV/$MISH_CMDPATH_NAME"
    MISH_CURRENT_VULPATH="$MISH_PATH/$MISH_ENV/$MISH_VULPATH_NAME"
    MISH_CURRENT_HISTORY="$MISH_CURRENT_LOGPATH/$MISH_ENV.history"
    mkdir -p $MISH_CURRENT_LOGPATH $MISH_CURRENT_CMDPATH $MISH_CURRENT_VULPATH
}

function print_config {
    ECHO "Terminal logs are stored to: $MISH_CURRENT_LOGPATH"
    ECHO "Command results are stored to: $MISH_CURRENT_CMDPATH"
    ECHO "History file is: $MISH_CURRENT_HISTORY"
}

function write_config {
    echo "$MISH_ENV_TITLE=$MISH_ENV" > $MISH_CONFIG_PATH
    echo "$MISH_PATH_TITLE=$MISH_PATH" >> $MISH_CONFIG_PATH
    echo "$MISH_STATUS_TITLE=$MISH_STATUS" >> $MISH_CONFIG_PATH
}

function start {
    echo -n "Enter project name [$MISH_ENV]: "
    read new_env
    if [[ $new_env != "" ]]; then
	MISH_ENV=$new_env
    fi
    success=1
    for (( ; $success != 0 ; )); do
	echo -n "Enter path for mish files [$MISH_PATH]: "
	read new_path
	if [[ $new_path == "" ]]; then
	    new_path=$MISH_PATH
	fi
	# Create directory if we can, mkdir takes care of the checks
	mkdir -p $new_path
	if [[ $? == 0 ]]; then # mkdir succeeded
	    MISH_PATH=$(realpath $new_path)
	    success=0
	fi
    done
    MISH_STATUS="on"
    write_config

    ECHO "Starting environment for $MISH_ENV."
}

function status {
    ECHO "Environment name:" $MISH_ENV
    ECHO "Path:" $MISH_PATH/$MISH_ENV
    ECHO "Status:" $MISH_STATUS
    exit
}

function stop {
    MISH_STATUS="off"
    write_config
    echo "Warning: Script keeps on logging as long as you don't exit."
}

################################################################################
# START                                                                        #
################################################################################

# Reading arguments
while [[ $# -gt 0 ]]; do
    case "$1" in
	start|on)
	    start
	    shift
	    ;;
	stop|off)
	    stop
	    shift
	    ;;
	status)
	    status
	    shift
	    ;;
	help|-h)
	    help
	    exit
	    ;;
	*)
	    if echo "$NETCOMMAND_LIST" | grep -qw $1; then
		$MISH_NET_PATH $*
	    else
		ECHO "Error: Unknown argument."
		echo "$HELP"
	    fi
	    exit
	    ;;
    esac
done

################################################################################
# ENABLED PENETRATION TEST ENVIRONMENT                                         #
################################################################################

MISH_PROMPT_COLOR='\[\e[41;1;37m\]'
OFF="\[\e[00m\]"

if [[ $MISH_STATUS == "on" ]]; then

    update_config
    
    # Initiate command logging 
    PROMPT_COMMAND="date +%Y-%m-%d-%H:%M:%S >> $MISH_CURRENT_HISTORY ; history -a ; history | tail -n1 | cut -b8- >> $MISH_CURRENT_HISTORY"

    # Initiate special prompt
    PS1="$MISH_PROMPT_COLOR $MISH_ENV $OFF$PS1"
    
    # We need to test that the parent shell is not script (which calls
    # .bash_aliases too) to avoid an endless loop.
    term="$(ps -ocommand= -p $PPID | awk '{print $1}')"
    if [[ $term != 'script' ]]; then
	export MISHCMD=$MISH_CURRENT_CMDPATH
	MISH_CURRENT_SCRIPT="$MISH_CURRENT_LOGPATH/$MISH_ENV.`date +%Y%m%d-%H%M%S`.script"
	echo "********************************************************************"
	echo "MISH ENVIRONMENT IS ENABLED ($MISH_ENV)"
	print_config
	ECHO "Created new script file: $MISH_CURRENT_SCRIPT"
	echo "********************************************************************"
	# Check if script file exist because we don't want to overwrite it
	if [[ ! -f $MISH_CURRENT_SCRIPT ]]; then
	    script -qf $MISH_CURRENT_SCRIPT
	fi
    fi
    # Move to the environment's directory:
    cd $MISH_PATH/$MISH_ENV
fi
